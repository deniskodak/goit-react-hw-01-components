{"version":3,"sources":["components/profile-component/styled.js","components/profile-component/Profile.js","components/statistics-component/styled.js","components/statistics-component/Stats-list-item.js","components/statistics-component/random-color.js","components/statistics-component/Stastistics.js","components/friends-list-component/styled.js","components/friends-list-component/FriendListItem.js","components/friends-list-component/FriendList.js","components/transactions-component/styled.js","components/transactions-component/TransactionHistory.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Section","styled","section","Div","div","Img","img","P","p","Ul","ul","Li","li","Span","span","Profile","avatar","name","tag","location","stats","className","src","alt","followers","views","likes","Title","h2","props","color","StatsListItem","stat","label","percentage","getRandom","min","max","Math","ceil","random","Statistics","title","map","id","online","FriendListItem","friend","isOnline","FriendList","friends","Table","table","Th","th","Td","td","Tr","tr","TransactionHistory","transctions","type","amount","currency","App","user","statistics","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y3FAGMA,EAAcC,YAAH,qFAKXC,EAAUC,IAAOC,QAAV,8CAIPC,EAAMF,IAAOG,IAAV,gUAcHC,EAAMJ,IAAOK,IAAV,mEAKHC,EAAIN,IAAOO,EAAV,gTAmBDC,EAAKR,IAAOS,GAAV,gGAOFC,EAAKV,IAAOW,GAAV,2MAWFC,EAAOZ,IAAOa,KAAV,mI,OCvBKC,EAzCC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,MAAhC,OACd,eAACpB,EAAD,WACE,cAACF,EAAD,IACA,eAACK,EAAD,CAAKkB,UAAU,UAAf,UACE,eAAClB,EAAD,CAAKkB,UAAU,cAAf,UACE,cAAChB,EAAD,CAAKiB,IAAKN,EAAQO,IAAI,gHAAsBF,UAAU,WACtD,cAACd,EAAD,CAAGc,UAAU,OAAb,SAAqBJ,IACrB,eAACV,EAAD,CAAGc,UAAU,MAAb,cAAqBH,KACrB,cAACX,EAAD,CAAGc,UAAU,WAAb,SAAyBF,OAG3B,eAACV,EAAD,WACE,eAACE,EAAD,WACE,cAACE,EAAD,CAAMQ,UAAU,QAAhB,uBACA,cAACR,EAAD,CAAMQ,UAAU,WAAhB,SAA4BD,EAAMI,eAEpC,eAACb,EAAD,WACE,cAACE,EAAD,CAAMQ,UAAU,QAAhB,mBACA,cAACR,EAAD,CAAMQ,UAAU,WAAhB,SAA4BD,EAAMK,WAEpC,eAACd,EAAD,WACE,cAACE,EAAD,CAAMQ,UAAU,QAAhB,mBACA,cAACR,EAAD,CAAMQ,UAAU,WAAhB,SAA4BD,EAAMM,qBCxBtC1B,EAAUC,IAAOC,QAAV,wCAGPyB,EAAQ1B,IAAO2B,GAAV,4JASLnB,EAAKR,IAAOS,GAAV,iVAYFC,EAAKV,IAAOW,GAAV,gMASc,SAACiB,GAAD,OAAWA,EAAMC,SAGjCjB,EAAOZ,IAAOa,KAAV,+FC5BKiB,EAPO,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,IAAUE,KAAQC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,WAAzB,OACpB,eAAC,EAAD,CAAIJ,MAAOA,EAAX,UACE,cAAC,EAAD,UAAOG,IACP,eAAC,EAAD,CAAMZ,UAAU,aAAhB,UAA8Ba,EAA9B,WCFWC,I,wBAAAA,GAJf,SAAmBC,EAAKC,GACtB,OAAOC,KAAKC,KAAKD,KAAKE,UAAYH,EAAMD,GAAOA,ICkClCK,GA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,MAAV,OACjB,eAAC,EAAD,WACGsB,GAAS,cAACf,EAAD,UAAQe,IAElB,eAAC,EAAD,WACGtB,EAAMuB,KAAI,SAACX,GACV,IAAMF,EAAK,8BACHK,GAAU,EAAG,KADV,4BAEHA,GAAU,EAAG,KAFV,4BAGHA,GAAU,EAAG,KAHV,iBAKX,OAAO,cAAC,EAAD,CAA6BH,KAAMA,EAAMF,MAAOA,GAA5BE,EAAKY,OAPpC,WCTE5C,GAAUC,IAAOC,QAAV,8CAIPO,GAAKR,IAAOS,GAAV,wGAMFC,GAAKV,IAAOW,GAAV,mOAaFC,GAAOZ,IAAOa,KAAV,iIAIY,SAACe,GAAD,OAAYA,EAAMgB,OAAS,QAAU,SAIrDxC,GAAMJ,IAAOK,IAAV,iIAQHC,GAAIN,IAAOO,EAAV,qEC9BQsC,GARQ,SAAC,GAAD,QAAGC,OAAUC,EAAb,EAAaA,SAAUhC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,KAA/B,OACrB,eAAC,GAAD,WACG+B,EAAW,cAAC,GAAD,CAAMH,QAAM,IAAM,cAAC,GAAD,IAC9B,cAAC,GAAD,CAAKvB,IAAKN,EAAQO,IAAI,kHACtB,cAAC,GAAD,UAAIN,QCkBOgC,GApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,cAAC,GAAD,UACE,cAAC,GAAD,UACGA,EAAQP,KAAI,SAACI,GAAD,OACX,cAAC,GAAD,CAAgCA,OAAQA,GAAnBA,EAAOH,YCN9B9C,GAAcC,YAAH,qFAMXC,GAAUC,IAAOC,QAAV,8CAGPiD,GAAQlD,IAAOmD,MAAV,+IAMLC,GAAKpD,IAAOqD,GAAV,4LAWFC,GAAKtD,IAAOuD,GAAV,4JAQFC,GAAKxD,IAAOyD,GAAV,8OCGOC,GApCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACzB,eAAC,GAAD,WACE,cAAC,GAAD,IACA,eAACT,GAAD,WACE,gCACE,+BACE,cAACE,GAAD,mBACA,cAACA,GAAD,qBACA,cAACA,GAAD,4BAIJ,gCACGO,EAAYjB,KAAI,gBAAGC,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACf,eAACN,GAAD,WACE,cAACF,GAAD,UAAKM,IACL,cAACN,GAAD,UAAKO,IACL,cAACP,GAAD,UAAKQ,MAHEnB,eCUJoB,GAhBH,kBACV,qCACE,cAAC,EAAD,CACEhD,OAAQiD,EAAKjD,OACbC,KAAMgD,EAAKhD,KACXE,SAAU8C,EAAK9C,SACfD,IAAK+C,EAAK/C,IACVE,MAAO6C,EAAK7C,QAEd,cAAC,GAAD,CAAYA,MAAO8C,IACnB,cAAC,GAAD,CAAYxB,MAAM,eAAetB,MAAO8C,IACxC,cAAC,GAAD,CAAYhB,QAASA,IACrB,cAAC,GAAD,CAAoBU,YAAaO,QCnBrCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.69be2836.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *, :after, :before {\r\n    box-sizing: border-box;\r\n};\r\n`;\r\nconst Section = styled.section`\r\n  padding: 40px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  &.description {\r\n    padding: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  &.profile {\r\n    width: calc(100% / 3);\r\n    box-shadow: 8px 0px 0px 0px #dcd0c0, 0px 8px 0px 0px #b1938b,\r\n      -8px 0px 0px 0px #4e4e56, 0px 0px 0px 8px #da635d,\r\n      5px 5px 15px 5px rgba(165, 230, 255, 0);\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 70px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst P = styled.p`\r\n  margin: 0;\r\n  font-size: \"14px\";\r\n  font-weight: \"400\";\r\n  color: \"rgb(148 165 203)\";\r\n\r\n  &.name {\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n  }\r\n  &: nth-child(2) {\r\n    margin-top: 8px;\r\n  }\r\n  &: not(: last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: calc(100% / 3);\r\n\r\n  padding: 20px;\r\n  background-color: #92c2c2;\r\n  border: 1px solid #aeb5b5;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  &.label {\r\n    color: white;\r\n    font-size: 14px;\r\n  }\r\n  &.quantity {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport { Section, Div, Img, P, Ul, Li, Span, GlobalStyle };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Section, Div, Img, P, GlobalStyle, Ul, Li, Span } from \"./styled\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <Section>\r\n    <GlobalStyle />\r\n    <Div className=\"profile\">\r\n      <Div className=\"description\">\r\n        <Img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n        <P className=\"name\">{name}</P>\r\n        <P className=\"tag\">@{tag}</P>\r\n        <P className=\"location\">{location}</P>\r\n      </Div>\r\n\r\n      <Ul>\r\n        <Li>\r\n          <Span className=\"label\">Followers</Span>\r\n          <Span className=\"quantity\">{stats.followers}</Span>\r\n        </Li>\r\n        <Li>\r\n          <Span className=\"label\">Views</Span>\r\n          <Span className=\"quantity\">{stats.views}</Span>\r\n        </Li>\r\n        <Li>\r\n          <Span className=\"label\">Likes</Span>\r\n          <Span className=\"quantity\">{stats.likes}</Span>\r\n        </Li>\r\n      </Ul>\r\n    </Div>\r\n  </Section>\r\n);\r\n\r\nProfile.propTypes = {\r\n  src: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\npadding 40px`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n  display: flex;\r\n  height: 200px;\r\n  width: calc(100% / 2);\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  width: calc(100% / 2);\r\n  justify-content: center;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  box-shadow: 0px 20px 0px -10px #ffffff, 0px -20px 0px -10px #ffffff,\r\n    20px 0px 0px -10px #ffffff, -20px 0px 0px -10px #ffffff,\r\n    0px 0px 0px 6px #bd6716a1, 5px 5px 15px 5px rgb(165 230 255 / 0%);\r\n`;\r\n\r\nconst Li = styled.li`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 50px;\r\n  height: auto;\r\n\r\n  color: white;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-size: 11px;\r\n\r\n  &.percentage {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport { Section, Title, Ul, Li, Span };\r\n","import React from \"react\";\r\nimport { Li, Span } from \"./styled\";\r\n\r\nconst StatsListItem = ({ color, stat: { label, percentage } }) => (\r\n  <Li color={color}>\r\n    <Span>{label}</Span>\r\n    <Span className=\"percentage\">{percentage}%</Span>\r\n  </Li>\r\n);\r\n\r\nexport default StatsListItem;\r\n","function getRandom(min, max) {\r\n  return Math.ceil(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport default getRandom;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatsListItem from \"./Stats-list-item\";\r\nimport { Section, Title, Ul } from \"./styled\";\r\n\r\nimport getRandom from \"./random-color\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <Section>\r\n    {title && <Title>{title}</Title>}\r\n\r\n    <Ul>\r\n      {stats.map((stat) => {\r\n        const color = `rgb(\r\n              ${getRandom(0, 255)},\r\n              ${getRandom(0, 255)},\r\n              ${getRandom(0, 255)}\r\n          )`;\r\n        return <StatsListItem key={stat.id} stat={stat} color={color} />;\r\n      })}\r\n      ;\r\n    </Ul>\r\n  </Section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  padding: 40px;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: calc(100% / 2);\r\n`;\r\nconst Li = styled.li`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  padding: 10px 15px;\r\n  box-shadow: 0px 5px 9px -2px #000000;\r\n\r\n  &: not(: last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: ${(props) => (props.online ? \"green\" : \"red\")};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 20%;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst P = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`;\r\nexport { Section, Ul, Span, Img, Li, P };\r\n","import React from \"react\";\r\nimport { Span, Img, Li, P } from \"./styled\";\r\n\r\nconst FriendListItem = ({ friend: { isOnline, avatar, name } }) => (\r\n  <Li>\r\n    {isOnline ? <Span online /> : <Span />}\r\n    <Img src={avatar} alt=\"аватар пользователя\" />\r\n    <P>{name}</P>\r\n  </Li>\r\n);\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport { Section, Ul } from \"./styled\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <Section>\r\n    <Ul>\r\n      {friends.map((friend) => (\r\n        <FriendListItem key={friend.id} friend={friend} />\r\n      ))}\r\n    </Ul>\r\n  </Section>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default FriendList;\r\n","import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *, :after, :before {\r\n    box-sizing: border-box;\r\n};\r\n`;\r\n\r\nconst Section = styled.section`\r\n  padding: 40px;\r\n`;\r\nconst Table = styled.table`\r\n  width: calc(100% / 3);\r\n  box-shadow: 0px 10px 13px -7px #000000,\r\n    5px 5px 15px 5px rgba(165, 230, 255, 0);\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: 600;\r\n  color: white;\r\n  background-color: #519aa5;\r\n  padding: 10px 15px;\r\n\r\n  &: not(: last-child) {\r\n    border-right: 1px solid white;\r\n  }\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 10px 15px;\r\n  &: nth-child(2n +1) {\r\n    border-right: 1px solid #519aa5;\r\n    border-left: 1px solid #519aa5;\r\n  }\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  border-right: 1px solid #519aa5;\r\n    border-left: 1px solid #519aa5;\r\n    \r\n  &: not:(last-child) {\r\n      border-bottom:  1px solid #b8aeae;\r\n  }\r\n  &: nth-child(2n) {\r\n    background-color: #adc4c4;\r\n  }\r\n`;\r\nexport { GlobalStyle, Section, Table, Th, Td, Tr };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Section, GlobalStyle, Table, Th, Td, Tr } from \"./styled\";\r\n\r\nconst TransactionHistory = ({ transctions }) => (\r\n  <Section>\r\n    <GlobalStyle />\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <Th>Type</Th>\r\n          <Th>Amount</Th>\r\n          <Th>Currency</Th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {transctions.map(({ id, type, amount, currency }) => (\r\n          <Tr key={id}>\r\n            <Td>{type}</Td>\r\n            <Td>{amount}</Td>\r\n            <Td>{currency}</Td>\r\n          </Tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  </Section>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  transctions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\n\nimport user from \"./data-json/user.json\";\nimport statistics from \"./data-json/statistics.json\";\nimport friends from \"./data-json/friend-list.json\";\nimport transactions from \"./data-json/transactions.json\";\n\nimport Profile from \"./components/profile-component/Profile\";\nimport Statistics from \"./components/statistics-component/Stastistics\";\nimport FriendList from \"./components/friends-list-component/FriendList\";\nimport TransactionHistory from \"./components/transactions-component/TransactionHistory\";\n\nconst App = () => (\n  <>\n    <Profile\n      avatar={user.avatar}\n      name={user.name}\n      location={user.location}\n      tag={user.tag}\n      stats={user.stats}\n    />\n    <Statistics stats={statistics} />\n    <Statistics title=\"Upload stats\" stats={statistics} />\n    <FriendList friends={friends} />\n    <TransactionHistory transctions={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}