{"version":3,"sources":["components/profile-component/styled.js","components/profile-component/Stats.js","components/profile-component/Profile.js","components/statistics-component/styled.js","components/statistics-component/random-color.js","components/statistics-component/Stats-list.js","components/statistics-component/Stastistics.js","components/friends-list-component/styled.js","components/friends-list-component/FriendListItem.js","components/friends-list-component/FriendList.js","components/transactions-component/styled.js","components/transactions-component/TransactionHistory.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Section","styled","section","Div","div","Img","img","P","p","props","name","Ul","ul","Li","li","Span","span","Stats","followers","views","likes","className","Profile","src","tag","location","alt","class","Title","h2","color","percentage","getRandom","min","max","Math","ceil","random","StatsList","stats","map","id","label","Statistics","title","online","FriendListItem","friends","avatar","isOnline","FriendList","Table","table","Th","th","Td","td","Tr","tr","TransactionHistory","transctions","type","amount","currency","App","user","statistics","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.458f6faa.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *, :after, :before {\r\n    box-sizing: border-box;\r\n};\r\n`;\r\nconst Section = styled.section`\r\n  padding: 40px;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  &.description {\r\n    padding: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  &.profile-card {\r\n    width: calc(100% / 3);\r\n    box-shadow: 8px 0px 0px 0px #dcd0c0, 0px 8px 0px 0px #b1938b,\r\n      -8px 0px 0px 0px #4e4e56, 0px 0px 0px 8px #da635d,\r\n      5px 5px 15px 5px rgba(165, 230, 255, 0);\r\n  }\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 70px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst P = styled.p`\r\n  margin: 0;\r\n  font-size: ${(props) => (props.name ? \"18px\" : \"14px\")};\r\n  font-weight: ${(props) => (props.name ? \"600\" : \"400\")};\r\n  color: ${(props) => (props.name ? \"black\" : \"rgb(148 165 203)\")};\r\n\r\n  &: nth-child(2) {\r\n    margin-top: 8px;\r\n  }\r\n  &: not(: last-child) {\r\n    margin-bottom: 8px;\r\n  }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: calc(100% / 3);\r\n\r\n  padding: 20px;\r\n  background-color: #92c2c2;\r\n  border: 1px solid #aeb5b5;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  &.label {\r\n    color: white;\r\n    font-size: 14px;\r\n  }\r\n  &.quantity {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport { Section, Div, Img, P, Ul, Li, Span, GlobalStyle };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Ul, Li, Span } from \"./styled\";\r\n\r\nconst Stats = ({ followers, views, likes }) => (\r\n  <Ul>\r\n    <Li>\r\n      <Span className=\"label\">Followers</Span>\r\n      <Span className=\"quantity\">{followers}</Span>\r\n    </Li>\r\n    <Li>\r\n      <Span className=\"label\">Views</Span>\r\n      <Span className=\"quantity\">{views}</Span>\r\n    </Li>\r\n    <Li>\r\n      <Span className=\"label\">Likes</Span>\r\n      <Span className=\"quantity\">{likes}</Span>\r\n    </Li>\r\n  </Ul>\r\n);\r\n\r\nStats.propTypes = {\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Stats from \"./Stats\";\r\nimport { Section, Div, Img, P, GlobalStyle } from \"./styled\";\r\n\r\nconst Profile = ({ src, name, tag, location, followers, views, likes }) => (\r\n  <Section>\r\n    <GlobalStyle />\r\n    <Div className=\"profile-card\">\r\n      <Div className=\"description\">\r\n        <Img src={src} alt=\"Аватар пользователя\" class=\"avatar\" />\r\n        <P name>{name}</P>\r\n        <P class=\"tag\">{tag}</P>\r\n        <P class=\"location\">{location}</P>\r\n      </Div>\r\n\r\n      <Stats followers={followers} views={views} likes={likes} />\r\n    </Div>\r\n  </Section>\r\n);\r\n\r\nProfile.propTypes = {\r\n  src: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\npadding 40px`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 0;\r\n  display: flex;\r\n  height: 200px;\r\n  width: calc(100% / 2);\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  width: calc(100% / 2);\r\n  justify-content: center;\r\n  padding: 0;\r\n  margin: 0;\r\n\r\n  box-shadow: 0px 20px 0px -10px #ffffff, 0px -20px 0px -10px #ffffff,\r\n    20px 0px 0px -10px #ffffff, -20px 0px 0px -10px #ffffff,\r\n    0px 0px 0px 6px #bd6716a1, 5px 5px 15px 5px rgb(165 230 255 / 0%);\r\n`;\r\n\r\nconst Li = styled.li`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 50px;\r\n  height: auto;\r\n\r\n  color: white;\r\n  background-color: ${(props) => props.color};\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-size: ${(props) => (props.percentage ? \"18px\" : \"11px\")};\r\n`;\r\n\r\nexport { Section, Title, Ul, Li, Span };\r\n","function getRandom(min, max) {\r\n  return Math.ceil(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport default getRandom;\r\n","import React from \"react\";\r\nimport { Ul, Li, Span } from \"./styled\";\r\nimport getRandom from \"./random-color\";\r\n\r\nconst StatsList = ({ stats }) => (\r\n  <Ul>\r\n    {stats.map(({ id, label, percentage }) => {\r\n      const color = `rgb(\r\n            ${getRandom(0, 255)},\r\n            ${getRandom(0, 255)},\r\n            ${getRandom(0, 255)}\r\n        )`;\r\n\r\n      return (\r\n        <Li key={id} color={color}>\r\n          <Span>{label}</Span>\r\n          <Span percentage>{percentage}%</Span>\r\n        </Li>\r\n      );\r\n    })}\r\n  </Ul>\r\n);\r\n\r\nexport default StatsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StatsList from \"./Stats-list\";\r\nimport { Section, Title } from \"./styled\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <Section>\r\n    {title && <Title>{title}</Title>}\r\n    <StatsList stats={stats} />\r\n  </Section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  padding: 40px;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  width: calc(100% / 2);\r\n`;\r\nconst Li = styled.li`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  padding: 10px 15px;\r\n  box-shadow: 0px 5px 9px -2px #000000;\r\n\r\n  &: not(: last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  display: block;\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: ${(props) => (props.online ? \"green\" : \"red\")};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 20%;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n`;\r\n\r\nconst P = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`;\r\nexport { Section, Ul, Span, Img, Li, P };\r\n","import React from \"react\";\r\nimport { Span, Img, Li, P } from \"./styled\";\r\n\r\nconst FriendListItem = ({ friends }) =>\r\n  friends.map(({ avatar, name, isOnline, id }) => (\r\n    <Li class=\"item\" key={id}>\r\n      {isOnline ? <Span online /> : <Span />}\r\n      <Img src={avatar} alt=\"аватар пользователя\" />\r\n      <P class=\"name\">{name}</P>\r\n    </Li>\r\n  ));\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"./FriendListItem\";\r\nimport { Section, Ul } from \"./styled\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <Section>\r\n    <Ul>\r\n      <FriendListItem friends={friends} />\r\n    </Ul>\r\n  </Section>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default FriendList;\r\n","import styled from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *, :after, :before {\r\n    box-sizing: border-box;\r\n};\r\n`;\r\n\r\nconst Section = styled.section`\r\n  padding: 40px;\r\n`;\r\nconst Table = styled.table`\r\n  width: calc(100% / 3);\r\n  box-shadow: 0px 10px 13px -7px #000000,\r\n    5px 5px 15px 5px rgba(165, 230, 255, 0);\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: 600;\r\n  color: white;\r\n  background-color: #519aa5;\r\n  padding: 10px 15px;\r\n\r\n  &: not(: last-child) {\r\n    border-right: 1px solid white;\r\n  }\r\n`;\r\n\r\nconst Td = styled.td`\r\n  padding: 10px 15px;\r\n  &: nth-child(2n +1) {\r\n    border-right: 1px solid #519aa5;\r\n    border-left: 1px solid #519aa5;\r\n  }\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  border-right: 1px solid #519aa5;\r\n    border-left: 1px solid #519aa5;\r\n    \r\n  &: not:(last-child) {\r\n      border-bottom:  1px solid #b8aeae;\r\n  }\r\n  &: nth-child(2n) {\r\n    background-color: #adc4c4;\r\n  }\r\n`;\r\nexport { GlobalStyle, Section, Table, Th, Td, Tr };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Section, GlobalStyle, Table, Th, Td, Tr } from \"./styled\";\r\n\r\nconst TransactionHistory = ({ transctions }) => (\r\n  <Section>\r\n    <GlobalStyle />\r\n    <Table>\r\n      <thead>\r\n        <tr>\r\n          <Th>Type</Th>\r\n          <Th>Amount</Th>\r\n          <Th>Currency</Th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {transctions.map(({ id, type, amount, currency }) => (\r\n          <Tr key={id}>\r\n            <Td>{type}</Td>\r\n            <Td>{amount}</Td>\r\n            <Td>{currency}</Td>\r\n          </Tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  </Section>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  transctions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\n\nimport user from \"./data-json/user.json\";\nimport statistics from \"./data-json/statistics.json\";\nimport friends from \"./data-json/friend-list.json\";\nimport transactions from \"./data-json/transactions.json\";\n\nimport Profile from \"./components/profile-component/Profile\";\nimport Statistics from \"./components/statistics-component/Stastistics\";\nimport FriendList from \"./components/friends-list-component/FriendList\";\nimport TransactionHistory from \"./components/transactions-component/TransactionHistory\";\n\nconst App = () => (\n  <>\n    <Profile\n      src={user.avatar}\n      name={user.name}\n      location={user.location}\n      tag={user.tag}\n      followers={user.stats.followers}\n      views={user.stats.views}\n      likes={user.stats.likes}\n    />\n    <Statistics stats={statistics} />\n    <Statistics title=\"Upload stats\" stats={statistics} />\n    <FriendList friends={friends} />\n    <TransactionHistory transctions={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}